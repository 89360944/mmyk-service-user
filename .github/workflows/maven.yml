# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      # 登录Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: jzdphz
          password: 123456docker
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      # build 镜像并push到中央仓库中
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: jzdphz/service-user
      # push后，用ssh连接服务器执行脚本
      - name: SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # 停止旧版容器
            docker stop $(docker ps --filter ancestor=jzdphz/service-user -q)
            # 删除旧版容器
            docker rm -f $(docker ps -a --filter ancestor=jzdphz/service-user -q)
            # 删除旧版镜像
            docker rmi -f $(docker images jzdphz/service-user -q)
            # 拉取最新latest版本镜像
            docker pull jzdphz/service-user
            # 运行最新latest版本镜像
            docker run -d -p 8080:8080 jzdphz/service-user
